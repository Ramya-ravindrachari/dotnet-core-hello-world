
name: .NET


on:
   
   push:
     branches:
     - master
     - master**
   pull_request:
    branches:
     - master
     - workitem
     - Integratiion

jobs:
  build:
   runs-on: ubuntu-latest
   steps:
    - name: Checkout repository
      uses: actions/checkout@v2
   
 #   - name: Checkout repository and submodules
  #    uses: actions/checkout@v2
   #   with:
    #    submodules: recursive
     #   token: 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
  #  - uses: actions/checkout@v2
   #   with:
    #    token: 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
    - run: git submodule update --init --recursive 
    - name: clone submodule
      uses: actions/checkout@v2
      with:
          repository: Ramya-ravindrachari/my-test
          path: action.yml
          branch: branch_test
          token: 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

          persist-credentials: false
      
   # - name: Build
    #  uses: ./action.yml

      
   # - name: Use submodule action
    #  uses: ./.github/actions/checkoutgit submodule update --init --recursive

     # with:
          
       
  #  - name: Build
     # uses: ./.github/workflows/ci_build.yml
    #  uses: ./github_actions/workflows/ci_build.yml
   #   with:
    
    
   # - uses: actions/checkout@v2
    #- name: Setup .NET
     # uses: actions/setup-dotnet@v1
     # with:
      #  dotnet-version: 5.0.x
   # - name: Restore dependencies
   #   run: dotnet restore
   # - name: Build
    #  run: dotnet build --no-restore
    #- name: Test
    #  run: dotnet test --no-build --verbosity normal

 # deploy_to_dev:
  #  runs-on: ubuntu-latest
  #  needs: build
  #  if: github.event_name != 'pull_request'
   # environment: Deployment
   # steps:
    #    - name: running deployment script
    #      run: echo "deployment ...."
          
  #Create-github-release:
   # runs-on: ubuntu-latest
   # steps:
   # - name: Checkout code
    #  uses: actions/checkout@v2
   # - name: create release notes
   #   uses: actions/github-script@v6.1.0
   #   with:
    #    github-token: ${{secrets.GITHUB_TOKEN}}
     #   script: |
      #     await github.request('POST /repos/${{github.repository}}/releases', {
           
       #     tag_name: 'v1.0.0',
           
        #    draft: false,
         #   prerelease: false,
          #  generate_release_notes: true
           #})
#comment
#comment1
#commen3
